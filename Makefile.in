
srcdir = @srcdir@
builddir = @builddir@

RUSTC = @RUSTC@
RUSTFLAGS = @RUSTFLAGS@
CC = @CC@
CFLAGS = @CFLAGS@

RUSTC_FOR_BUILD = @RUSTC_FOR_BUILD@
RUSTFLAGS_FOR_BUILD = @RUSTFLAGS_FOR_BUILD@

INSTALL = @INSTALL@

OBJCOPY = @OBJCOPY@
STRIP = @STRIP@

RUST_TARGET_PATH = @RUST_TARGET_PATH@

prefix = @prefix@
includedir = @libdir@

bootdir = @bootdir@
kernel_libdir = @kernel_libdir@
search_paths = @search_paths@
base_dirs = @base_dirs@
kernel_name = @kernel_name@

MKDIR_P = @MKDIR_P@

CARGO = @CARGO@

rustc_build_target=@rustc_build_target@
rustc_host_target=@rustc_host_target@

rust_bin_prefix=@rust_bin_prefix@
rust_bin_suffix=@rust_bin_suffix@
rust_rlib_prefix=@rust_rlib_prefix@
rust_rlib_suffix=@rust_rlib_suffix@
rust_staticlib_prefix=@rust_staticlib_prefix@
rust_staticlib_suffix=@rust_staticlib_suffix@
rust_dylib_prefix=@rust_dylib_prefix@
rust_dylib_suffix=@rust_dylib_suffix@
rust_cdylib_prefix=@rust_cdylib_prefix@
rust_cdylib_suffix=@rust_cdylib_suffix@

cargo_builddir = cargo-build/$(rustc_host_target)/debug

kernel_cdylib = $(cargo_builddir)/$(rust_cdylib_prefix)phantom_kernel$(rust_cdylib_suffix)
loader_staticlib = $(cargo_builddir)/$(rust_staticlib_prefix)phantom_loader$(rust_staticlib_suffix)

export RUSTC RUSTFLAGS CC CFLAGS RUST_TARGET_PATH bootdir kernel_libdir search_paths base_dirs kernel_name OBJCOPY STRIP RUSTC_FOR_BUILD RUSTFLAGS_FOR_BUILD

# all

all: 
	+$(CARGO) build --target-dir $(builddir)/cargo-build --manifest-path $(srcdir)/Cargo.toml --target $(rustc_host_target) -Z build-std=core,alloc
	+$(MAKE) stamp

stamp: phantom-loader/asm/stamp $(kernel_name)
	touch stamp

Makefile: config.status @srcdir@/Makefile.in
	./config.status Makefile

config.status: @srcdir@/configure
	./config.status --recheck

phantom-loader/asm.mk: config.status @srcdir@/phantom-loader/asm.mk.in
	./config.status $@

phantom-kernel.so: $(kernel_cdylib)
	cp $(kernel_cdylib) phantom-kernel.so

phantom-loader/asm/stamp: phantom-loader/asm.mk $(loader_staticlib)
	+$(MAKE) -C phantom-loader -f asm.mk loader_staticlib=@abs_builddir@/$(loader_staticlib)

dist: all ; export RUSTFLAGS=$(RUSTFLAGS_FOR_BUILD) RUSTC=$(RUSTC_FOR_BUILD) CC=@CC_FOR_BUILD@ CFLAGS=@CLAGS_FOR_BUILD@
	+$(CARGO) build --target-dir $(builddir)/cargo-build --manifest-path=@srcdir@/dist/Cargo.toml --target $(rustc_build_target) -Z build-std=core,alloc,std
	+$(MAKE) diststamp

diststamp: stamp 
